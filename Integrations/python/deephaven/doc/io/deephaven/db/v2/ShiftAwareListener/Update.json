{
 "className": "io.deephaven.engine.v2.ShiftAwareListener$Update",
 "methods": {
  "acquire": "Increment the reference count on this object.\n\n:return: (io.deephaven.engine.v2.ShiftAwareListener.Update) this for convenience",
  "append": ":param logOutput: io.deephaven.base.log.LogOutput\n:return: io.deephaven.base.log.LogOutput",
  "copy": "Make a deep copy of this object.\n\n:return: io.deephaven.engine.v2.ShiftAwareListener.Update",
  "empty": ":return: (boolean) true if no changes occurred in this update",
  "forAllModified": "This helper iterates through the modified index and supplies both the pre-shift and post-shift keys per row.\n\n:param consumer: (java.util.function.BiConsumer<java.lang.Long,java.lang.Long>) - a consumer to feed the modified pre-shift and post-shift key values to.",
  "getModifiedPreShift": ":return: (io.deephaven.engine.v2.utils.Index) a cached copy of the modified index in pre-shift keyspace",
  "release": "Decrement the reference count on this object.",
  "toString": ":return: java.lang.String",
  "valid": ":return: (boolean) true if all internal state is initialized"
 },
 "path": "io.deephaven.engine.v2.ShiftAwareListener.Update",
 "text": "A shift aware update structure, containing the rows and columns that were added, modified, removed, and shifted\n on a given cycle.",
 "typeName": "class"
}