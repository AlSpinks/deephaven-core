{
 "className": "io.deephaven.engine.v2.utils.LongColumnSourceRedirectionIndex",
 "methods": {
  "fillFromChunk": "Our default, inefficient, implementation. Inheritors who care should provide a better implementation.\n\n:param context: io.deephaven.engine.v2.sources.ChunkSink.FillFromContext\n:param src: io.deephaven.engine.v2.sources.chunk.Chunk<? extendsio.deephaven.engine.v2.sources.chunk.Attributes.Values>\n:param orderedKeys: io.deephaven.engine.v2.utils.OrderedKeys",
  "makeFillFromContext": "Provide a default, empty ChunkSink.FillFromContext for use with our default\n WritableSource.fillFromChunk(io.deephaven.engine.v2.sources.ChunkSink.FillFromContext, io.deephaven.engine.v2.sources.chunk.Chunk<? extends io.deephaven.engine.v2.sources.chunk.Attributes.Values>, io.deephaven.engine.v2.utils.OrderedKeys).\n\n:param chunkCapacity: int\n:return: io.deephaven.engine.v2.sources.ChunkSink.FillFromContext",
  "put": ":param key: long\n:param index: long\n:return: long",
  "putVoid": "Like put, but we do not care about a return value.\n\n:param key: (long) - the key to put\n:param index: (long) - the inner value to insert into the redirection index",
  "remove": ":param key: long\n:return: long",
  "removeAll": ":param keys: io.deephaven.engine.v2.utils.OrderedKeys",
  "removeVoid": "Like remove, but we do not care about a return value.\n\n:param key: (long) - the key to remove"
 },
 "path": "io.deephaven.engine.v2.utils.LongColumnSourceRedirectionIndex",
 "text": "RedirectionIndex implementation that wraps a WritableSource of longs.",
 "typeName": "class"
}