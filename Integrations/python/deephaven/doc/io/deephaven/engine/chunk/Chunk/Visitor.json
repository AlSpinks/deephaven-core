{
 "className": "io.deephaven.engine.chunk.Chunk$Visitor",
 "methods": {
  "visit": "*Overload 1*  \n  :param chunk: io.deephaven.engine.chunk.ByteChunk<Chunk.Visitor.ATTR>\n  \n*Overload 2*  \n  :param chunk: io.deephaven.engine.chunk.BooleanChunk<Chunk.Visitor.ATTR>\n  \n*Overload 3*  \n  :param chunk: io.deephaven.engine.chunk.CharChunk<Chunk.Visitor.ATTR>\n  \n*Overload 4*  \n  :param chunk: io.deephaven.engine.chunk.ShortChunk<Chunk.Visitor.ATTR>\n  \n*Overload 5*  \n  :param chunk: io.deephaven.engine.chunk.IntChunk<Chunk.Visitor.ATTR>\n  \n*Overload 6*  \n  :param chunk: io.deephaven.engine.chunk.LongChunk<Chunk.Visitor.ATTR>\n  \n*Overload 7*  \n  :param chunk: io.deephaven.engine.chunk.FloatChunk<Chunk.Visitor.ATTR>\n  \n*Overload 8*  \n  :param chunk: io.deephaven.engine.chunk.DoubleChunk<Chunk.Visitor.ATTR>\n  \n*Overload 9*  \n  Note: Java generics information - <T>\n  \n  :param chunk: io.deephaven.engine.chunk.ObjectChunk<T,Chunk.Visitor.ATTR>"
 },
 "path": "io.deephaven.engine.chunk.Chunk.Visitor",
 "typeName": "interface"
}