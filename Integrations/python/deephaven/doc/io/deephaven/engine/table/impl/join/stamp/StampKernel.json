{
 "className": "io.deephaven.engine.table.impl.join.stamp.StampKernel",
 "methods": {
  "computeRedirections": "Stamps the left-hand-side values with the corresponding right hand side.\n\n The rightKeyIndices are parallel to the stamp values in rightStamps; and used to compute a new chunk of\n redirections parallel to leftStamps.\n\n:param leftStamps: (io.deephaven.engine.chunk.Chunk<io.deephaven.engine.chunk.Attributes.Values>) - the input lhs stamp values\n:param rightStamps: (io.deephaven.engine.chunk.Chunk<io.deephaven.engine.chunk.Attributes.Values>) - the input rhs stamp values\n:param rightKeyIndices: (io.deephaven.engine.chunk.LongChunk<io.deephaven.engine.chunk.Attributes.RowKeys>) - the input rhs stamp indices\n:param leftRedirections: (io.deephaven.engine.chunk.WritableLongChunk<io.deephaven.engine.chunk.Attributes.RowKeys>) - the resulting redirections from the stamping operation",
  "makeReverseStampKernel": ":param type: io.deephaven.engine.chunk.ChunkType\n:return: io.deephaven.engine.table.impl.join.stamp.StampKernel",
  "makeReverseStampKernelNoExact": ":param type: io.deephaven.engine.chunk.ChunkType\n:return: io.deephaven.engine.table.impl.join.stamp.StampKernel",
  "makeStampKernel": "*Overload 1*  \n  :param type: io.deephaven.engine.chunk.ChunkType\n  :param order: io.deephaven.engine.table.impl.SortingOrder\n  :param disallowExactMatch: boolean\n  :return: io.deephaven.engine.table.impl.join.stamp.StampKernel\n  \n*Overload 2*  \n  :param type: io.deephaven.engine.chunk.ChunkType\n  :return: io.deephaven.engine.table.impl.join.stamp.StampKernel",
  "makeStampKernelNoExact": ":param type: io.deephaven.engine.chunk.ChunkType\n:return: io.deephaven.engine.table.impl.join.stamp.StampKernel"
 },
 "path": "io.deephaven.engine.table.impl.join.stamp.StampKernel",
 "typeName": "interface"
}