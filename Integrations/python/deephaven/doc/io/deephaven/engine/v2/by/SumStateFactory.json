{
 "className": "io.deephaven.engine.table.impl.by.SumStateFactory",
 "methods": {
  "getChunkedOperator": ":param type: java.lang.Class\n:param name: java.lang.String\n:param exposeInternalColumns: boolean\n:return: io.deephaven.engine.table.impl.by.IterativeChunkedAggregationOperator",
  "getMemoKey": "Produces a MemoKey for this aggregation state factory.\n\n \n If two AggregationStateFactories have equal memoKeys, then Table.by(io.deephaven.engine.table.impl.by.AggregationStateFactory, io.deephaven.engine.table.impl.select.SelectColumn...) operations that have the same group\n by columns may be memoized. In that case instead of recomputing the result; the original result will be used.\n \n\n If null is returned, the operation will not be memoized.\n \n\n:return: (io.deephaven.engine.table.impl.by.AggregationMemoKey) an AggregationMemoKey, null if this operation can not be memoized.",
  "toString": ":return: java.lang.String"
 },
 "path": "io.deephaven.engine.table.impl.by.SumStateFactory",
 "text": "Factory for iterative sum aggregations.",
 "typeName": "class"
}