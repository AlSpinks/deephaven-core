{
 "className": "io.deephaven.engine.v2.select.DisjunctiveFilter",
 "methods": {
  "copy": "Create a copy of this SelectFilter.\n\n:return: (io.deephaven.engine.v2.select.DisjunctiveFilter) an independent copy of this SelectFilter.",
  "filter": "Filter selection to only matching rows.\n\n:param selection: (io.deephaven.engine.v2.utils.RowSet) - the indices that should be filtered. The selection must be a subset of fullSet, and may include\n        rows that the engine determines need not be evaluated to produce the result. Implementations may\n        not mutate or close selection.\n:param fullSet: (io.deephaven.engine.v2.utils.RowSet) - the complete RowSet of the table to filter. The fullSet is used for calculating variables like \"i\"\n        or \"ii\". Implementations may not mutate or close fullSet.\n:param table: (io.deephaven.engine.tables.Table) - the table to filter\n:param usePrev: (boolean) - true if previous values should be used. Implementing previous value filtering is optional, and a\n        SelectFilter.PreviousFilteringNotSupported exception may be thrown. If a PreviousFiltering exception is thrown,\n        then the caller must acquire the UpdateGraphProcessor lock.\n:return: (io.deephaven.engine.v2.utils.MutableRowSet) The subset of selection accepted by this filter; ownership passes to the caller",
  "makeDisjunctiveFilter": ":param componentFilters: io.deephaven.engine.v2.select.SelectFilter...\n:return: io.deephaven.engine.v2.select.SelectFilter",
  "toString": ":return: java.lang.String"
 },
 "path": "io.deephaven.engine.v2.select.DisjunctiveFilter",
 "typeName": "class"
}