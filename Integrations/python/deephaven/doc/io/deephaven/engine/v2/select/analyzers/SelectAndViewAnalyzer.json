{
 "className": "io.deephaven.engine.v2.select.analyzers.SelectAndViewAnalyzer",
 "methods": {
  "applyUpdate": "Apply this update to this SelectAndViewAnalyzer.\n\n:param upstream: (io.deephaven.engine.v2.ShiftAwareListener.Update) - the upstream update\n:param toClear: (io.deephaven.engine.v2.utils.ReadOnlyIndex) - rows that used to exist and no longer exist\n:param helper: (io.deephaven.engine.v2.select.analyzers.SelectAndViewAnalyzer.UpdateHelper) - convenience class that memoizes reusable calculations for this update",
  "calcEffects": "Our job here is to calculate the effects: a map from incoming column to a list of columns that it effects. We do\n this in two stages. In the first stage we create a map from column to (set of dependent columns). In the second\n stage we reverse that map.\n\n:return: java.util.Map<java.lang.String,java.lang.String[]>",
  "create": ":param mode: io.deephaven.engine.v2.select.analyzers.SelectAndViewAnalyzer.Mode\n:param columnSources: java.util.Map<java.lang.String,io.deephaven.engine.v2.sources.ColumnSource<?>>\n:param index: io.deephaven.engine.v2.utils.Index\n:param parentMcs: io.deephaven.engine.v2.ModifiedColumnSet\n:param publishTheseSources: boolean\n:param selectColumns: io.deephaven.engine.v2.select.SelectColumn...\n:return: io.deephaven.engine.v2.select.analyzers.SelectAndViewAnalyzer",
  "getAllColumnSources": ":return: java.util.Map<java.lang.String,io.deephaven.engine.v2.sources.ColumnSource<?>>",
  "getInner": ":return: io.deephaven.engine.v2.select.analyzers.SelectAndViewAnalyzer",
  "getNewColumnSources": ":return: java.util.Map<java.lang.String,io.deephaven.engine.v2.sources.ColumnSource<?>>",
  "getPublishedColumnSources": ":return: java.util.Map<java.lang.String,io.deephaven.engine.v2.sources.ColumnSource<?>>",
  "updateColumnDefinitionsFromTopLayer": ":param columnDefinitions: java.util.Map<java.lang.String,io.deephaven.engine.tables.ColumnDefinition<?>>"
 },
 "path": "io.deephaven.engine.v2.select.analyzers.SelectAndViewAnalyzer",
 "typeName": "class"
}