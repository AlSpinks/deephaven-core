{
 "className": "io.deephaven.engine.v2.sort.permute.ShortPermuteKernel",
 "methods": {
  "permute": "*Overload 1*  \n  Note: Java generics information - <T extends io.deephaven.engine.v2.sources.chunk.Attributes.Any>\n  \n  :param extend: io.deephaven.engine.v2.sources.chunk.ShortChunk<?\n  :param outputPositions: io.deephaven.engine.v2.sources.chunk.IntChunk<io.deephaven.engine.v2.sources.chunk.Attributes.ChunkPositions>\n  :param supe: io.deephaven.engine.v2.sources.chunk.WritableShortChunk<?\n  \n*Overload 2*  \n  Note: Java generics information - <T extends io.deephaven.engine.v2.sources.chunk.Attributes.Any>\n  \n  :param inputPositions: io.deephaven.engine.v2.sources.chunk.IntChunk<io.deephaven.engine.v2.sources.chunk.Attributes.ChunkPositions>\n  :param extend: io.deephaven.engine.v2.sources.chunk.ShortChunk<?\n  :param outputPositions: io.deephaven.engine.v2.sources.chunk.IntChunk<io.deephaven.engine.v2.sources.chunk.Attributes.ChunkPositions>\n  :param supe: io.deephaven.engine.v2.sources.chunk.WritableShortChunk<?",
  "permuteInput": "Note: Java generics information - <T extends io.deephaven.engine.v2.sources.chunk.Attributes.Any>\n\n:param extend: io.deephaven.engine.v2.sources.chunk.ShortChunk<?\n:param inputPositions: io.deephaven.engine.v2.sources.chunk.IntChunk<io.deephaven.engine.v2.sources.chunk.Attributes.ChunkPositions>\n:param supe: io.deephaven.engine.v2.sources.chunk.WritableShortChunk<?"
 },
 "path": "io.deephaven.engine.v2.sort.permute.ShortPermuteKernel",
 "typeName": "class"
}