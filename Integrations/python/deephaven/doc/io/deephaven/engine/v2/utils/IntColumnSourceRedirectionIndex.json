{
 "className": "io.deephaven.engine.v2.utils.IntColumnSourceRowRedirection",
 "methods": {
  "fillChunk": "Lookup each element in RowSequence and write the result to mappedKeysOut\n\n:param fillContext: (io.deephaven.engine.v2.utils.RowRedirection.FillContext) - the RowRedirection FillContext\n:param mappedKeysOut: (io.deephaven.engine.v2.sources.chunk.WritableLongChunk<io.deephaven.engine.v2.sources.chunk.Attributes.RowKeys>) - the result chunk\n:param keysToMap: (io.deephaven.engine.structures.RowSequence) - the keys to lookup in this redirection rowSet",
  "fillPrevChunk": ":param fillContext: io.deephaven.engine.v2.utils.RowRedirection.FillContext\n:param mappedKeysOut: io.deephaven.engine.v2.sources.chunk.WritableLongChunk<io.deephaven.engine.v2.sources.chunk.Attributes.RowKeys>\n:param keysToMap: io.deephaven.engine.structures.RowSequence",
  "get": ":param key: long\n:return: long",
  "getPrev": ":param key: long\n:return: long",
  "makeFillContext": ":param chunkSize: int\n:param sharedContext: io.deephaven.engine.v2.sources.chunk.SharedContext\n:return: io.deephaven.engine.v2.utils.RowRedirection.FillContext",
  "put": ":param key: long\n:param index: long\n:return: long",
  "putVoid": "Like put, but we do not care about a return value.\n\n:param key: (long) - the key to put\n:param index: (long) - the inner value to insert into the redirection rowSet",
  "remove": ":param key: long\n:return: long",
  "removeVoid": "Like remove, but we do not care about a return value.\n\n:param key: (long) - the key to remove"
 },
 "path": "io.deephaven.engine.v2.utils.IntColumnSourceRowRedirection",
 "typeName": "class"
}