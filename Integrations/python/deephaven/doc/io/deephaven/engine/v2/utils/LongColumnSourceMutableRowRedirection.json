{
 "className": "io.deephaven.engine.v2.utils.LongColumnSourceMutableRowRedirection",
 "methods": {
  "fillFromChunk": "Insert mappings from each element in a RowSequence to the parallel element in a LongChunk. h\n\n:param context: (io.deephaven.engine.v2.sources.WritableChunkSink.FillFromContext) - THe FillFromContext\n:param innerRowKeys: (io.deephaven.engine.v2.sources.chunk.Chunk<? extendsio.deephaven.engine.v2.sources.chunk.Attributes.RowKeys>) - The inner row keys to map to\n:param outerRowKeys: (io.deephaven.engine.structures.RowSequence) - The outer row keys to map from",
  "makeFillFromContext": "Make a WritableChunkSink.FillFromContext for this MutableRowRedirection. The default implementation\n supplies MutableRowRedirection.DEFAULT_FILL_FROM_INSTANCE, suitable for use with the default implementation of\n MutableRowRedirection.fillFromChunk(WritableChunkSink.FillFromContext , Chunk, RowSequence).\n\n:param chunkCapacity: (int) - The maximum number of mappings that will be supplied in one operation\n:return: (io.deephaven.engine.v2.sources.WritableChunkSink.FillFromContext) The WritableChunkSink.FillFromContext to use",
  "put": "Add or change a mapping from outerRowKey to innerRowKey.\n\n:param outerRowKey: (long) - The outer row key to map from\n:param innerRowKey: (long) - The inner row key to map to\n:return: (long) The inner row key previously mapped from outerRowKey, or RowSet.NULL_ROW_KEY if there was\n         no mapping",
  "putVoid": "Like MutableRowRedirection.put(long, long), but without requiring the implementation to provide a return value. May be more\n efficient in some cases.\n\n:param outerRowKey: (long) - The outer row key to map from\n:param innerRowKey: (long) - The inner row key to map to",
  "remove": "Remove a mapping from outerRowKey.\n\n:param outerRowKey: (long) - The outer row key to unmap\n:return: (long) The inner row key previously mapped from outerRowKey, or RowSet.NULL_ROW_KEY if there was\n         no mapping",
  "removeAll": "Remove the specified outerRowKeys.\n\n:param outerRowKeys: (io.deephaven.engine.structures.RowSequence) - The outer row keys to remove",
  "removeVoid": "Like MutableRowRedirection.remove(long) (long, long)}, but without requiring the implementation to provide a return value. May\n be more efficient in some cases.\n\n:param outerRowKey: (long) - The outer row key to map from",
  "startTrackingPrevValues": "Initiate previous value tracking."
 },
 "path": "io.deephaven.engine.v2.utils.LongColumnSourceMutableRowRedirection",
 "text": "MutableRowRedirection implementation that wraps a WritableSource of longs.",
 "typeName": "class"
}