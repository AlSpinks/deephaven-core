{
 "className": "io.deephaven.engine.v2.utils.singlerange.SingleRangeRowSequence",
 "methods": {
  "asIndex": "Get an Index representation of this RowSequence.\n\n:return: (io.deephaven.engine.v2.utils.Index) An Index representation for the same keys in the same order",
  "copy": ":return: io.deephaven.engine.v2.utils.singlerange.SingleRangeRowSequence",
  "fillKeyIndicesChunk": "Fill the supplied WritableLongChunk with individual keys from this RowSequence.\n \n The chunk's capacity is assumed to be big enough.\n\n:param chunkToFill: (io.deephaven.engine.v2.sources.chunk.WritableLongChunk<? extendsio.deephaven.engine.v2.sources.chunk.Attributes.KeyIndices>) - A chunk to fill with individual keys",
  "fillKeyRangesChunk": "Fill the supplied WritableLongChunk with key ranges from this RowSequence.\n \n The chunk's capacity is assumed to be big enough.\n\n:param chunkToFill: (io.deephaven.engine.v2.sources.chunk.WritableLongChunk<io.deephaven.engine.v2.sources.chunk.Attributes.OrderedKeyRanges>) - A chunk to fill with key ranges",
  "firstKey": "Get the first key in this RowSequence.\n\n:return: (long) The first key, or ReadOnlyIndex.NULL_KEY if there is none.",
  "isEmpty": "True if the size of this RowSequence is zero.\n\n:return: (boolean) True if there are no elements in this RowSequence.",
  "lastKey": "Get the last key in this RowSequence.\n\n:return: (long) The last key, or ReadOnlyIndex.NULL_KEY if there is none.",
  "rangeEnd": ":return: long",
  "rangeStart": ":return: long",
  "rangesCountUpperBound": ":return: long",
  "size": "Get the number of keys in this RowSequence.\n\n:return: (long) The size, in [0, Long.MAX_VALUE]"
 },
 "path": "io.deephaven.engine.v2.utils.singlerange.SingleRangeRowSequence",
 "typeName": "class"
}